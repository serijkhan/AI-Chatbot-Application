{"ast":null,"code":"var _jsxFileName = \"D:\\\\AI-New-Project\\\\ai-chatbot-react-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [chat, setChat] = useState([]);\n  const sendQuestion = async () => {\n    if (!question.trim()) return;\n    const newChat = [...chat, {\n      role: 'user',\n      message: question\n    }];\n    setChat(newChat);\n    setQuestion('');\n    try {\n      const response = await fetch('http://localhost:8082/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(question)\n      });\n      const answer = await response.text();\n      setChat([...newChat, {\n        role: 'bot',\n        message: answer\n      }]);\n    } catch (error) {\n      setChat([...newChat, {\n        role: 'bot',\n        message: 'OpenAI '\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: chat.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-entry ${entry.role}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [entry.role === 'user' ? 'You' : 'Bot', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), \" \", entry.message]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        placeholder: \"Ask something...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendQuestion,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i6gv69Htwue3EAK3sbm5Dq8RW78=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","question","setQuestion","chat","setChat","sendQuestion","trim","newChat","role","message","response","fetch","method","headers","body","JSON","stringify","answer","text","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","idx","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/AI-New-Project/ai-chatbot-react-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [question, setQuestion] = useState('');\n  const [chat, setChat] = useState([]);\n\n  const sendQuestion = async () => {\n    if (!question.trim()) return;\n    const newChat = [...chat, { role: 'user', message: question }];\n    setChat(newChat);\n    setQuestion('');\n    try {\n      const response = await fetch('http://localhost:8082/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(question),\n      });\n      const answer = await response.text();\n      setChat([...newChat, { role: 'bot', message: answer }]);\n    } catch (error) {\n      setChat([...newChat, { role: 'bot', message: 'OpenAI ' }]);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>AI Chatbot</h1>\n      <div className=\"chat-box\">\n        {chat.map((entry, idx) => (\n          <div key={idx} className={`chat-entry ${entry.role}`}>\n            <strong>{entry.role === 'user' ? 'You' : 'Bot'}:</strong> {entry.message}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          value={question}\n          onChange={(e) => setQuestion(e.target.value)}\n          placeholder=\"Ask something...\"\n        />\n        <button onClick={sendQuestion}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}